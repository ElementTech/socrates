apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "socrates.fullname" . }}-server
  labels:
    app: {{ template "socrates.name" . }}-server
    chart: {{ template "socrates.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "socrates.name" . }}-server
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "socrates.name" . }}-server
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"        
    spec:
      restartPolicy: Always
      volumes: 
        - name: tmp
          emptyDir: {}          
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          volumeMounts: 
            - name: tmp
              mountPath: /tmp           
          env:    
            - name: DOCKER_HOST 
              value: tcp://{{ template "socrates.name" . }}-worker:2375
            - name: PORT
              value: "4000"
            - name: ENV
              value: production
            - name: DB_USERNAME
              value: user
            - name: DB_PASSWORD
              value: password
            - name: DB_NAME
              value: {{ template "socrates.name" . }}-mongodb-headless
            - name: MASTER_PASSWORD
              value: Data123!@#
            - name: MASTER_EMAIL
              value: devops@explorium.ai
            - name: AUTH_SECRET
              value: random_string
            - name: MINIO_ADDR
              value: {{ template "socrates.name" . }}-minio
            - name: MINIO_PORT
              value: 9000
            - name: MINIO_SSL
              value: false
            - name: MINIO_ACCESS_KEY
              value: admin
            - name: MINIO_SECRET_KEY
              value: admin                                                        
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          resources:
{{ toYaml .Values.server.resources | indent 12 }}
    {{- with .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.server.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.server.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      # imagePullSecrets:
      #   - name: dc-2fjvj